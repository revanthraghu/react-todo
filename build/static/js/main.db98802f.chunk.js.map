{"version":3,"sources":["components/Task.jsx","App.js","index.js","App.module.css"],"names":["Task","props","state","done","favourite","edit","cancel","input","task","handleChange","bind","handleClick","e","this","setState","target","value","name","parentElement","prevState","newState","updateData","id","style","position","display","width","border","borderRadius","backgroundColor","height","padding","marginBottom","onClick","alignSelf","color","fontSize","cursor","background","className","onChange","type","minWidth","maxWidth","margin","flex","overflowWrap","disabled","title","paddingTop","React","PureComponent","App","todo","show","handleSubmit","showTodo","showCompleted","preventDefault","uuid","data","action","arr","Array","from","i","length","splice","filter","item","map","key","completed_list","styles","completed","opacity","body","marginTop","plusSymbol","onSubmit","placeholder","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.db98802f.chunk.js","sourcesContent":["import React from 'react'\nclass Task extends React.PureComponent {\n    constructor(props) {\n        super(props)\n        this.state = {\n            done: false,\n            favourite: false,\n            edit: false,\n            cancel: false,\n            input: this.props.task\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleChange(e) {\n        this.setState({input: e.target.value})\n    }\n\n    handleClick(e) {\n        let name = e.target.name || e.target.parentElement.name\n        if(this.state.done === false && this.props.done === false) {\n            this.setState(prevState => {\n                let newState = !prevState[name]\n                if((name === \"edit\" && newState === false) || (name === \"cancel\" && newState === true) || (name === \"done\") || (name === \"favourite\")) {\n                    this.props.updateData(this.props.id, this.state.input, name)\n                }\n                return ({[name]: newState})\n            })\n        }\n        else {\n            if(name === \"done\" || name === \"cancel\") {\n                this.setState(prevState => {\n                    let newState = !prevState[name]\n                    this.props.updateData(this.props.id, this.state.input, name, this.state.done, this.state.cancel)\n                    return ({[name]: newState})\n                })\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div style={ this.props.done === true ? {position: \"relative\", display: \"flex\", width: \"350px\", border: \"1px solid rgb(180,180,180)\", borderRadius: \"4px\", backgroundColor: \"hsla(120, 50%, 50%, 0.5)\", height: \"max-content\", padding: \"10px\", marginBottom: \"15px\" } : {position: \"relative\", display: \"flex\", width: \"350px\", border: \"1px solid rgb(180,180,180)\", borderRadius: \"4px\", backgroundColor: \"white\", height: \"max-content\", padding: \"10px\", marginBottom: \"15px\" }}>\n                <button name=\"done\" onClick={this.handleClick} style={{alignSelf: \"start\", color: \"green\", fontSize: \"26px\", cursor: \"pointer\", background: \"transparent\", border: \"none\"}}>\n                    <i className={this.state.done === true || this.props.done === true ? \"fas fa-check-square\":\"fal fa-square\"}></i>\n                </button>\n                {this.state.edit === true? <textarea onChange={this.handleChange} value={this.state.input} type=\"text\" style={{border: \"none\", minWidth: \"214px\", maxWidth: \"214px\", margin: \"0 10px\", alignSelf: \"center\", fontSize: \"18px\", height: \"max-content\"}}/> : <div style={{flex: \"1\", overflowWrap: \"anywhere\", padding: \"0 10px\", alignSelf: \"center\", fontSize: \"18px\"}}>{this.props.done === true ? <s>{this.state.input}</s> : this.state.input}</div>}\n                <button disabled={this.props.done} name=\"favourite\" onClick={this.handleClick} style={{alignSelf: \"start\", color: this.props.done === true ? \"black\": \"orange\", fontSize: \"22px\", cursor: \"pointer\", background: \"transparent\", border: \"none\"}}>\n                    <i name=\"favourite\" className={this.state.favourite===true || this.props.favourite === true? \"fas fa-star\" : \"fal fa-star\"}/>\n                </button>\n                <button disabled={this.props.done} title={this.state.edit===true?\"Save\":\"Edit\"} name=\"edit\" onClick={this.handleClick} style={{alignSelf: \"start\", color: this.props.done === true ? \"black\": \"green\", fontSize: \"20px\", padding: \"0 10px\", paddingTop: \"0.1em\", cursor: \"pointer\", background: \"transparent\", border: \"none\"}}>\n                    <i className={this.state.edit===true?\"far fa-check\":\"fas fa-pencil\"}></i>\n                </button>\n                <button title=\"Delete\" name=\"cancel\" onClick={this.handleClick} style={{paddingTop: \"0.2em\", alignSelf: \"start\", color: this.props.done === true ? \"black\": \"red\", cursor: \"pointer\", background: \"transparent\", border: \"none\"}}>\n                    <i style={{fontSize: \"26px\"}} className=\"fal fa-times\"/>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default Task","import React from 'react'\nimport Task from './components/Task'\nimport styles from './App.module.css'\nimport {v4 as uuid} from 'uuid'\n// Each todo list item can be crossed out after completion by clicking on it.\n// A green color should be given to the list if completed\n// There should be a button Show Completed Todos that will show completed todos.\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo: [],\n      input: '',\n      show : false\n    };\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.showTodo = this.showTodo.bind(this)\n    this.updateData = this.updateData.bind(this)\n    this.showCompleted = this.showCompleted.bind(this)\n  }\n\n  handleChange(e) {\n    this.setState(\n      { input: e.target.value }\n    )\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    this.setState(prevState => ({todo: [...prevState.todo, {task: this.state.input, id: uuid(), done: false, favourite: false}]}))\n  }\n\n  updateData(id, data, action, done, cancel) {\n    if(action === 'edit') {\n      this.setState(prevState =>  {\n        let arr = Array.from(prevState.todo)\n        for(var i = 0; i < arr.length; i++) {\n          if(arr[i].id === id) {\n            arr[i].task = data\n            break\n          }\n        }\n        return ({todo: arr})\n      })\n    }\n    else if(action === 'favourite') {\n      this.setState(prevState =>  {\n        let arr = Array.from(prevState.todo)\n        for(var i = 0; i < arr.length; i++) {\n          if(arr[i].id === id) {\n            arr[i][\"favourite\"] = !arr[i].favourite\n            break\n          }\n        }\n        return ({todo: arr})\n      })\n    }\n    else if(action === 'cancel') {\n      this.setState(prevState =>  {\n        let arr = Array.from(prevState.todo)\n        for(var i = 0; i < arr.length; i++) {\n          if(arr[i].id === id) {\n            arr.splice(i,1)\n            break\n          }\n        }\n        return ({todo: arr})\n      })\n      //this.forceUpdate()\n    }\n    else if(action === 'done') {\n      this.setState(prevState =>  {\n        let arr = Array.from(prevState.todo)\n        for(var i = 0; i < arr.length; i++) {\n          if(arr[i].id === id) {\n            arr[i][\"done\"] = !arr[i].done\n            break\n          }\n        }\n        return ({todo: arr})\n      })\n    }\n    else return\n  }\n\n  showTodo() {\n    if(this.state.todo.length !== 0) {\n      return (this.state.todo.filter((item) => item.done === false).map((item)=><Task key={item.id} task={item.task} done={item.done} id={item.id} favourite={item.favourite} updateData={this.updateData}/>))\n    }\n    else return null\n  }\n\n  showCompleted() {\n    if(this.state.todo.length !== 0) {\n      let completed_list = this.state.todo.filter((item) => item.done === true)\n      if(completed_list.length !== 0 && this.state.show === true) {\n        return (\n          <div className={styles.completed}>\n            <button \n            style={{border: '1px solid green', borderRadius: '4px', color: 'white', background: '#4e8949', padding: '5px 20px', opacity: '0.9', cursor: 'pointer'}} \n            onClick={(e)=>{this.setState({show: false})}}>\n              Hide\n            </button>\n            {completed_list.map((item)=><Task key={item.id} task={item.task} id={item.id} done={item.done} favourite={item.favourite} updateData={this.updateData}/>)}\n          </div>\n        )\n      }\n      else if(completed_list.length !== 0 && this.state.show === false){\n        return (<div className={styles.completed}>\n                  <button \n                  style={{border: '1px solid green', borderRadius: '4px', color: 'white', background: '#4e8949', padding: '5px 20px', opacity: '0.9', cursor: 'pointer'}} \n                  onClick={(e)=>{this.setState({show: true})}}>\n                    Show\n                  </button>\n                </div>\n              )\n      }\n      else if(completed_list.length === 0 && this.state.show === true) {\n        this.setState({show: false})\n        return null\n      } \n    }\n    return null\n  }\n\n  render() {\n    return (\n    <div className={styles.body}>\n      <div style={{position: \"relative\", marginTop: \"15vh\", marginBottom: \"5vh\"}}>\n        <i className={`fas fa-plus ${styles.plusSymbol}`}></i>\n        <form onSubmit={this.handleSubmit}>\n          <input className={styles.input} type=\"text\" placeholder=\"Add a to-do...\" onChange={this.handleChange} value={this.state.input}/>\n        </form>\n      </div>\n      {this.showTodo()}\n      {this.showCompleted()}\n    </div>\n    )\n  }\n  \n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"App_body__ZTvxg\",\"input\":\"App_input__2NxBo\",\"plusSymbol\":\"App_plusSymbol__1ePlQ\",\"completed\":\"App_completed__15pfa\"};"],"sourceRoot":""}